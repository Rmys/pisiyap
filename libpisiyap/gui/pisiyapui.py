# -*- coding: utf-8 -*-

from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *


class Pisiyap(QObject):
    def setupUi(self, Pisiyap):
        Pisiyap.resize(682, 323)
        icon = QIcon.fromTheme("pisiyap")
        Pisiyap.setWindowIcon(icon)
        self.centralwidget = QWidget(Pisiyap)
        self.gridLayout_21 = QGridLayout(self.centralwidget)
        self.pisiyapTab = QTabWidget(self.centralwidget)
        self.pisiyapTab.setBaseSize(QSize(525, 322))
        self.pisiyapTab.setUsesScrollButtons(False)
        self.tab = QWidget()
        self.gridLayout_5 = QGridLayout(self.tab)
        self.horizontalLayout_2 = QHBoxLayout()
        self.label_15 = QLabel(self.tab)
        self.label_15.setPixmap(QIcon.fromTheme("pisiyap").pixmap(128, 128))
        self.horizontalLayout_2.addWidget(self.label_15)
        self.label_10 = QLabel(self.tab)
        self.horizontalLayout_2.addWidget(self.label_10)
        self.label_14 = QLabel(self.tab)
        self.label_14.setPixmap(QIcon.fromTheme("pisiyap").pixmap(128, 128))
        self.horizontalLayout_2.addWidget(self.label_14)
        self.gridLayout_5.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.gridLayout_4 = QGridLayout()
        self.label_2 = QLabel(self.tab)
        self.label_2.setAlignment(Qt.AlignCenter)
        self.gridLayout_4.addWidget(self.label_2, 0, 0, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_4, 1, 0, 1, 1)
        self.verticalLayout_2 = QVBoxLayout()
        self.gridLayout_2 = QGridLayout()
        self.brwsBut = QPushButton(self.tab)
        icon1 = QIcon.fromTheme("document-open")
        self.brwsBut.setIcon(icon1)
        self.gridLayout_2.addWidget(self.brwsBut, 0, 0, 1, 1)
        self._pkgerName = QLabel(self.tab)
        self.gridLayout_2.addWidget(self._pkgerName, 1, 0, 1, 1)
        self._pkgerEmail = QLabel(self.tab)
        self.gridLayout_2.addWidget(self._pkgerEmail, 2, 0, 1, 1)
        self.brwsLine = QLineEdit(self.tab)
        self.gridLayout_2.addWidget(self.brwsLine, 0, 1, 1, 1)
        self.pkgerName = QLineEdit(self.tab)
        self.gridLayout_2.addWidget(self.pkgerName, 1, 1, 1, 1)
        self.pkgerEmail = QLineEdit(self.tab)
        self.gridLayout_2.addWidget(self.pkgerEmail, 2, 1, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout_2)
        self.gridLayout_3 = QGridLayout()
        self.cancelBut = QPushButton(self.tab)
        self.cancelBut.setMaximumSize(QSize(80, 27))
        self.cancelBut.setBaseSize(QSize(80, 27))
        icon2 = QIcon.fromTheme("dialog-cancel")
        self.cancelBut.setIcon(icon2)
        self.gridLayout_3.addWidget(self.cancelBut, 0, 1, 1, 1)
        self.creatConfig = QPushButton(self.tab)
        self.creatConfig.setMaximumSize(QSize(80, 27))
        self.creatConfig.setBaseSize(QSize(80, 27))
        icon3 = QIcon.fromTheme("dialog-ok")
        self.creatConfig.setIcon(icon3)
        self.gridLayout_3.addWidget(self.creatConfig, 0, 2, 1, 1)
        spacerItem1 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem1, 0, 0, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout_3)
        spacerItem = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.gridLayout_5.addLayout(self.verticalLayout_2, 2, 0, 1, 1)
        icon4 = QIcon.fromTheme("configure")
        self.pisiyapTab.addTab(self.tab, icon4, "")
        self.tab_2 = QWidget()
        self.gridLayout_31 = QGridLayout(self.tab_2)
        self.verticalLayout_5 = QVBoxLayout()
        self.verticalLayout_4 = QVBoxLayout()
        spacerItem2 = QSpacerItem(654, 25, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem2)
        self.label_4 = QLabel(self.tab_2)
        self.verticalLayout_4.addWidget(self.label_4)
        spacerItem3 = QSpacerItem(649, 13, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem3)
        self.verticalLayout_5.addLayout(self.verticalLayout_4)
        self.horizontalLayout = QHBoxLayout()
        self.brwsBut_ = QPushButton(self.tab_2)
        self.brwsBut_.setMinimumSize(QSize(120, 27))
        icon5 = QIcon.fromTheme("document-open")
        self.brwsBut_.setIcon(icon5)
        self.horizontalLayout.addWidget(self.brwsBut_)
        self.brwsLine_ = QLineEdit(self.tab_2)
        self.horizontalLayout.addWidget(self.brwsLine_)
        self.verticalLayout_5.addLayout(self.horizontalLayout)
        self.gridLayout_31.addLayout(self.verticalLayout_5, 0, 0, 1, 1)
        spacerItem4 = QSpacerItem(649, 6, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_31.addItem(spacerItem4, 1, 0, 1, 1)
        self.gridLayout_30 = QGridLayout()
        self.copyArchive = QCheckBox(self.tab_2)
        self.gridLayout_30.addWidget(self.copyArchive, 0, 1, 1, 1)
        spacerItem5 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem5, 0, 0, 1, 1)
        spacerItem6 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem6, 0, 2, 1, 1)
        self.gridLayout_31.addLayout(self.gridLayout_30, 2, 0, 1, 1)
        spacerItem7 = QSpacerItem(651, 6, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_31.addItem(spacerItem7, 3, 0, 1, 1)
        self.verticalLayout = QVBoxLayout()
        self.gridLayout_8 = QGridLayout()
        self._archiveAddr = QLabel(self.tab_2)
        self.gridLayout_8.addWidget(self._archiveAddr, 1, 0, 1, 1)
        self._pckgVer = QLabel(self.tab_2)
        self.gridLayout_8.addWidget(self._pckgVer, 2, 0, 1, 1)
        self.homePage = QLineEdit(self.tab_2)
        self.gridLayout_8.addWidget(self.homePage, 0, 1, 1, 3)
        self.archiveAddr = QLineEdit(self.tab_2)
        self.gridLayout_8.addWidget(self.archiveAddr, 1, 1, 1, 3)
        self.pkgVer = QLineEdit(self.tab_2)
        self.pkgVer.setReadOnly(True)
        self.gridLayout_8.addWidget(self.pkgVer, 2, 1, 1, 1)
        self._homePage = QLabel(self.tab_2)
        self.gridLayout_8.addWidget(self._homePage, 0, 0, 1, 1)
        self.label_8 = QLabel(self.tab_2)
        self.gridLayout_8.addWidget(self.label_8, 2, 2, 1, 1)
        self.newPkgVer = QLineEdit(self.tab_2)
        self.gridLayout_8.addWidget(self.newPkgVer, 2, 3, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_8)
        self.gridLayout_33 = QGridLayout()
        self.backBut = QPushButton(self.tab_2)
        self.backBut.setMaximumSize(QSize(80, 27))
        icon6 = QIcon.fromTheme("go-previous")
        self.backBut.setIcon(icon6)
        self.gridLayout_33.addWidget(self.backBut, 0, 1, 1, 1)
        self.nextBut = QPushButton(self.tab_2)
        self.nextBut.setMaximumSize(QSize(80, 27))
        icon7 = QIcon.fromTheme("go-next")
        self.nextBut.setIcon(icon7)
        self.nextBut.setCheckable(False)
        self.gridLayout_33.addWidget(self.nextBut, 0, 2, 1, 1)
        spacerItem8 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_33.addItem(spacerItem8, 0, 0, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_33)
        self.gridLayout_31.addLayout(self.verticalLayout, 4, 0, 1, 1)
        self.pisiyapTab.addTab(self.tab_2, icon5, "")
        self.tab_3 = QWidget()
        self.gridLayout_15 = QGridLayout(self.tab_3)
        self.verticalLayout_3 = QVBoxLayout()
        spacerItem9 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem9)
        self.gridLayout_6 = QGridLayout()
        self._pkgName = QLabel(self.tab_3)
        self._pkgName.setMinimumSize(QSize(143, 19))
        self.gridLayout_6.addWidget(self._pkgName, 0, 0, 1, 1)
        self.pkgName = QLineEdit(self.tab_3)
        self.pkgName.setReadOnly(True)
        self.gridLayout_6.addWidget(self.pkgName, 0, 1, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_6)
        spacerItem10 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem10)
        self.label_9 = QLabel(self.tab_3)
        self.label_9.setAlignment(Qt.AlignCenter)
        self.verticalLayout_3.addWidget(self.label_9)
        spacerItem11 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem11)
        self.gridLayout_7 = QGridLayout()
        self._newPkgName = QLabel(self.tab_3)
        self._newPkgName.setMinimumSize(QSize(143, 19))
        self.gridLayout_7.addWidget(self._newPkgName, 0, 0, 1, 1)
        self._pkgerName_2 = QLabel(self.tab_3)
        self._pkgerName_2.setMinimumSize(QSize(143, 19))
        self.gridLayout_7.addWidget(self._pkgerName_2, 1, 0, 1, 1)
        self._pkgerEmail_2 = QLabel(self.tab_3)
        self._pkgerEmail_2.setMinimumSize(QSize(143, 19))
        self.gridLayout_7.addWidget(self._pkgerEmail_2, 2, 0, 1, 1)
        self.newPkgName = QLineEdit(self.tab_3)
        self.gridLayout_7.addWidget(self.newPkgName, 0, 1, 1, 1)
        self.pkgerName_ = QLineEdit(self.tab_3)
        self.gridLayout_7.addWidget(self.pkgerName_, 1, 1, 1, 1)
        self.pkgerEmail_ = QLineEdit(self.tab_3)
        self.gridLayout_7.addWidget(self.pkgerEmail_, 2, 1, 1, 1)
        spacerItem12 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem12, 3, 1, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_7)
        self.gridLayout_15.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        self.gridLayout_14 = QGridLayout()
        self.backBut_1 = QPushButton(self.tab_3)
        self.backBut_1.setMaximumSize(QSize(80, 27))
        self.backBut_1.setIcon(icon6)
        self.gridLayout_14.addWidget(self.backBut_1, 0, 1, 1, 1)
        self.nextBut_1 = QPushButton(self.tab_3)
        self.nextBut_1.setMaximumSize(QSize(80, 27))
        self.nextBut_1.setIcon(icon7)
        self.gridLayout_14.addWidget(self.nextBut_1, 0, 2, 1, 1)
        spacerItem13 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem13, 0, 0, 1, 1)
        self.gridLayout_15.addLayout(self.gridLayout_14, 1, 0, 1, 1)
        icon8 = QIcon.fromTheme("pisiyap")
        self.pisiyapTab.addTab(self.tab_3, icon8, "")
        self.tab_4 = QWidget()
        self.gridLayout_17 = QGridLayout(self.tab_4)
        self.gridLayout_16 = QGridLayout()
        spacerItem14 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem14, 0, 0, 1, 1)
        self.gridLayout_17.addLayout(self.gridLayout_16, 0, 0, 1, 1)
        self.gridLayout_11 = QGridLayout()
        self._license_2 = QLabel(self.tab_4)
        self._license_2.setMinimumSize(QSize(91, 22))
        self.gridLayout_11.addWidget(self._license_2, 1, 0, 1, 1)
        self._isA_2 = QLabel(self.tab_4)
        self._isA_2.setMinimumSize(QSize(91, 22))
        self.gridLayout_11.addWidget(self._isA_2, 2, 0, 1, 1)
        self.license = QComboBox(self.tab_4)
        self.license.addItem("")
        self.license.setItemText(0, "")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.license.addItem("")
        self.gridLayout_11.addWidget(self.license, 1, 1, 1, 1)
        self.isA = QComboBox(self.tab_4)
        self.isA.addItem("")
        self.isA.setItemText(0, "")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.isA.addItem("")
        self.gridLayout_11.addWidget(self.isA, 2, 1, 1, 1)
        spacerItem15 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem15, 2, 2, 1, 1)
        self._license_3 = QLabel(self.tab_4)
        self._license_3.setMinimumSize(QSize(81, 22))
        self.gridLayout_11.addWidget(self._license_3, 1, 2, 1, 1)
        self.newLicense = QLineEdit(self.tab_4)
        self.gridLayout_11.addWidget(self.newLicense, 1, 3, 1, 1)
        spacerItem16 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem16, 2, 3, 1, 1)
        self.gridLayout_17.addLayout(self.gridLayout_11, 1, 0, 1, 1)
        self.gridLayout_12 = QGridLayout()
        self._summary = QLabel(self.tab_4)
        self._summary.setMinimumSize(QSize(91, 22))
        self.gridLayout_12.addWidget(self._summary, 0, 0, 1, 1)
        self._description = QLabel(self.tab_4)
        self._description.setMinimumSize(QSize(91, 22))
        self.gridLayout_12.addWidget(self._description, 1, 0, 1, 1)
        self.summary = QPlainTextEdit(self.tab_4)
        self.summary.setMinimumSize(QSize(414, 51))
        self.gridLayout_12.addWidget(self.summary, 0, 1, 1, 1)
        self.description = QPlainTextEdit(self.tab_4)
        self.description.setMinimumSize(QSize(414, 81))
        self.gridLayout_12.addWidget(self.description, 1, 1, 1, 1)
        self.gridLayout_17.addLayout(self.gridLayout_12, 2, 0, 1, 1)
        self.gridLayout_13 = QGridLayout()
        self.backBut_2 = QPushButton(self.tab_4)
        self.backBut_2.setMaximumSize(QSize(80, 27))
        self.backBut_2.setIcon(icon6)
        self.gridLayout_13.addWidget(self.backBut_2, 0, 1, 1, 1)
        self.nextBut_2 = QPushButton(self.tab_4)
        self.nextBut_2.setMaximumSize(QSize(80, 27))
        self.nextBut_2.setIcon(icon7)
        self.gridLayout_13.addWidget(self.nextBut_2, 0, 2, 1, 1)
        spacerItem17 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem17, 0, 0, 1, 1)
        self.gridLayout_17.addLayout(self.gridLayout_13, 3, 0, 1, 1)
        icon9 = QIcon.fromTheme("text-xml")
        self.pisiyapTab.addTab(self.tab_4, icon9, "")
        self.tab_5 = QWidget()
        self.gridLayout_19 = QGridLayout(self.tab_5)
        spacerItem18 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_19.addItem(spacerItem18, 0, 0, 1, 1)
        self.gridLayout_18 = QGridLayout()
        self.label_3 = QLabel(self.tab_5)
        self.label_3.setTextFormat(Qt.PlainText)
        self.label_3.setAlignment(Qt.AlignCenter)
        self.gridLayout_18.addWidget(self.label_3, 0, 0, 1, 1)
        self.gridLayout_19.addLayout(self.gridLayout_18, 1, 0, 1, 1)
        spacerItem19 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_19.addItem(spacerItem19, 2, 0, 1, 1)
        self.gridLayout_9 = QGridLayout()
        self.autoTools = QRadioButton(self.tab_5)
        self.autoTools.setChecked(True)
        self.gridLayout_9.addWidget(self.autoTools, 0, 1, 1, 1)
        self.qt4Tools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.qt4Tools, 2, 1, 1, 1)

        self.qt5Tools = QRadioButton(self.tab_5)
        self.qt5Tools.setToolTip(self.tr("Select this option if the package is built with qt5 tools"))
        self.qt5Tools.setText(self.tr("Qt5 Tools"))
        self.gridLayout_9.addWidget(self.qt5Tools, 4, 1, 1, 1)

        self.cmakeTools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.cmakeTools, 0, 3, 1, 1)
        self.kde4Tools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.kde4Tools, 0, 5, 1, 1)

        spacerItemx = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItemx, 3, 3, 1, 1)

        self.kde5Tools = QRadioButton(self.tab_5)
        self.kde5Tools.setToolTip(self.tr("Select this option if the package is built with kde5 tools"))
        self.kde5Tools.setText(self.tr("KDE5 Tools"))
        self.gridLayout_9.addWidget(self.kde5Tools, 4, 3, 1, 1)

        self.pyTools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.pyTools, 2, 3, 1, 1)
        self.sconsTools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.sconsTools, 2, 5, 1, 1)
        self.mesonTools = QRadioButton(self.tab_5)
        self.gridLayout_9.addWidget(self.mesonTools, 4, 5, 1, 1)
        spacerItem20 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem20, 1, 3, 1, 1)
        spacerItem21 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem21, 0, 0, 1, 1)
        spacerItem22 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem22, 0, 6, 1, 1)
        spacerItem23 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem23, 0, 2, 1, 1)
        spacerItem24 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem24, 0, 4, 1, 1)
        self.gridLayout_19.addLayout(self.gridLayout_9, 3, 0, 1, 1)
        spacerItem25 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_19.addItem(spacerItem25, 4, 0, 1, 1)
        self.gridLayout_10 = QGridLayout()
        self.backBut_3 = QPushButton(self.tab_5)
        self.backBut_3.setMaximumSize(QSize(80, 27))
        self.backBut_3.setIcon(icon6)
        self.gridLayout_10.addWidget(self.backBut_3, 0, 2, 1, 1)
        self.nextBut_3 = QPushButton(self.tab_5)
        self.nextBut_3.setMaximumSize(QSize(80, 27))
        self.nextBut_3.setIcon(icon7)
        self.gridLayout_10.addWidget(self.nextBut_3, 0, 3, 1, 1)
        spacerItem26 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem26, 0, 1, 1, 1)
        self.gridLayout_19.addLayout(self.gridLayout_10, 5, 0, 1, 1)
        icon10 = QIcon.fromTheme("text-x-python")
        self.pisiyapTab.addTab(self.tab_5, icon10, "")
        self.tab_6 = QWidget()
        self.gridLayout_23 = QGridLayout(self.tab_6)
        spacerItem27 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_23.addItem(spacerItem27, 2, 0, 1, 1)
        spacerItem28 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_23.addItem(spacerItem28, 0, 0, 1, 1)
        spacerItem29 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_23.addItem(spacerItem29, 4, 0, 1, 1)
        self.gridLayout_22 = QGridLayout()
        spacerItem30 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout_22.addItem(spacerItem30, 1, 0, 1, 1)
        self.label_6 = QLabel(self.tab_6)
        self.label_6.setAlignment(Qt.AlignCenter)
        self.gridLayout_22.addWidget(self.label_6, 0, 0, 1, 1)
        self.label_5 = QLabel(self.tab_6)
        self.label_5.setAlignment(Qt.AlignCenter)
        self.gridLayout_22.addWidget(self.label_5, 2, 0, 1, 1)
        self.gridLayout_23.addLayout(self.gridLayout_22, 1, 0, 1, 1)
        self.gridLayout = QGridLayout()
        self.desktopFile = QCheckBox(self.tab_6)
        self.desktopFile.setChecked(False)
        self.gridLayout.addWidget(self.desktopFile, 0, 1, 1, 1)
        self.serviceScript = QCheckBox(self.tab_6)
        self.gridLayout.addWidget(self.serviceScript, 0, 3, 1, 1)
        self.iconTag = QCheckBox(self.tab_6)
        self.gridLayout.addWidget(self.iconTag, 2, 1, 1, 1)
        self.comarScript = QCheckBox(self.tab_6)
        self.gridLayout.addWidget(self.comarScript, 2, 3, 1, 1)
        spacerItem31 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem31, 0, 0, 1, 1)
        spacerItem32 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem32, 0, 4, 1, 1)
        spacerItem33 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem33, 0, 2, 1, 1)
        spacerItem34 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem34, 1, 2, 1, 1)
        self.gridLayout_23.addLayout(self.gridLayout, 3, 0, 1, 1)
        self.gridLayout_20 = QGridLayout()
        self.backBut_4 = QPushButton(self.tab_6)
        self.backBut_4.setMaximumSize(QSize(80, 27))
        self.backBut_4.setIcon(icon6)
        self.gridLayout_20.addWidget(self.backBut_4, 0, 2, 1, 1)
        spacerItem35 = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem35, 0, 1, 1, 1)
        self.nextBut_4 = QPushButton(self.tab_6)
        self.nextBut_4.setMaximumSize(QSize(80, 27))
        self.nextBut_4.setIcon(icon3)
        self.gridLayout_20.addWidget(self.nextBut_4, 0, 3, 1, 1)
        self.openDirectory = QCheckBox(self.tab_6)
        self.openDirectory.setChecked(True)
        self.gridLayout_20.addWidget(self.openDirectory, 0, 0, 1, 1)
        self.gridLayout_23.addLayout(self.gridLayout_20, 5, 0, 1, 1)
        icon11 = QIcon.fromTheme("filename-title-amarok")
        self.pisiyapTab.addTab(self.tab_6, icon11, "")
        self.gridLayout_21.addWidget(self.pisiyapTab, 0, 0, 1, 1)
        Pisiyap.setCentralWidget(self.centralwidget)
        self.pisiyapTab.setCurrentIndex(0)
        self.brwsBut.clicked.connect(Pisiyap.selectDir)
        self.brwsBut_.clicked.connect(Pisiyap.brwSource)
        self.cancelBut.clicked.connect(Pisiyap.close)
        self.creatConfig.clicked.connect(Pisiyap.createConfig)
        self.nextBut.clicked.connect(Pisiyap.nextAction)
        self.backBut.clicked.connect(Pisiyap.backAction)
        self.backBut_1.clicked.connect(Pisiyap.backAction)
        self.backBut_2.clicked.connect(Pisiyap.backAction)
        self.nextBut_1.clicked.connect(Pisiyap.nextAction)
        self.nextBut_2.clicked.connect(Pisiyap.nextAction)
        self.backBut_3.clicked.connect(Pisiyap.backAction)
        self.nextBut_3.clicked.connect(Pisiyap.nextAction)
        self.backBut_4.clicked.connect(Pisiyap.backAction)
        self.nextBut_4.clicked.connect(Pisiyap.createFiles)
        self.copyArchive.toggled[bool].connect(Pisiyap.copyArchive)
        self.brwsLine_.textChanged.connect(Pisiyap.packageName)
        self.desktopFile.toggled[bool].connect(Pisiyap.checkIconTag)
        self.isA.currentIndexChanged[int].connect(Pisiyap.checkDesktopFile)

        Pisiyap.setWindowTitle(self.tr("PiSiYap - PiSi Source File Creator"))
        self.label_10.setText(self.tr("PiSiYaP"))
        self.label_2.setText(self.tr("Select a directory where you would like to store PiSi source files"))
        self.brwsBut.setText(self.tr("Browse"))
        self._pkgerName.setText(self.tr("Packager Name   "))
        self._pkgerEmail.setText(self.tr("Packager E-mail  "))
        self.brwsLine.setToolTip(self.tr("Select a directory where you would like to store PiSi source files"))
        self.pkgerName.setToolTip(self.tr("Packager name"))
        self.pkgerEmail.setToolTip(self.tr("Packager e-mail"))
        self.cancelBut.setText(self.tr("Cancel"))
        self.creatConfig.setText(self.tr("Ok"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab), self.tr("Config"))
        self.label_4.setText(self.tr("""Please, select a source file below which you would like to package:"""))
        self.brwsBut_.setText(self.tr("Browse"))
        self.brwsLine_.setToolTip(self.tr("Select a source file which you would like to package"))
        self.copyArchive.setText(self.tr("   Check, if you want to copy the archive file into PiSi archive directory"))
        self._archiveAddr.setText(self.tr("Archive Address"))
        self._pckgVer.setText(self.tr("Package Version"))
        self.homePage.setToolTip(self.tr("Home page"))
        self.archiveAddr.setToolTip(self.tr("Archive address"))
        self.pkgVer.setToolTip(self.tr("Automatically generated package version. If the generated version is wrong, please specify the correct one in the next field"))
        self._homePage.setText(self.tr("Home Page"))
        self.label_8.setText(self.tr("or enter new version here"))
        self.newPkgVer.setToolTip(self.tr("New package version"))
        self.backBut.setText(self.tr("Back"))
        self.nextBut.setText(self.tr("Next"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab_2), self.tr("Archive"))
        self._pkgName.setText(self.tr("Package Name    "))
        self.pkgName.setToolTip(self.tr("Automatically generated package name. If the generated name is wrong, please specify the correct one in the field below"))
        self.label_9.setText(self.tr("If you would like to change the package name, please define it below:"))
        self._newPkgName.setText(self.tr("New Package Name"))
        self._pkgerName_2.setText(self.tr("Packager Name   "))
        self._pkgerEmail_2.setText(self.tr("Packager E-mail  "))
        self.newPkgName.setToolTip(self.tr("New package name"))
        self.pkgerName_.setToolTip(self.tr("Packager name"))
        self.pkgerEmail_.setToolTip(self.tr("Packager e-mail"))
        self.backBut_1.setText(self.tr("Back"))
        self.nextBut_1.setText(self.tr("Next"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab_3), self.tr("Package"))
        self._license_2.setText(self.tr("License"))
        self._isA_2.setText("IsA")
        self.license.setToolTip(self.tr("If the license is not in this list, please write new license in the next field"))
        self.license.setItemText(1, "GPLv1")
        self.license.setItemText(2, "GPLv2")
        self.license.setItemText(3, "GPLv3")
        self.license.setItemText(4, "LGPLv2")
        self.license.setItemText(5, "LGPLv2.1")
        self.license.setItemText(6, "LGPLv3")
        self.license.setItemText(7, "BSD")
        self.license.setItemText(8, "MIT")
        self.license.setItemText(9, "as-is")
        self.isA.setToolTip(self.tr("isA tag"))
        self.isA.setItemText(1, "app")
        self.isA.setItemText(2, "app:console")
        self.isA.setItemText(3, "app:gui")
        self.isA.setItemText(4, "app:web")
        self.isA.setItemText(5, "data")
        self.isA.setItemText(6, "data:doc")
        self.isA.setItemText(7, "data:")
        self.isA.setItemText(8, "driver")
        self.isA.setItemText(9, "library")
        self.isA.setItemText(10, "locale")
        self.isA.setItemText(11, "kernel")
        self.isA.setItemText(12, "service")
        self._license_3.setText(self.tr("New License"))
        self.newLicense.setToolTip(self.tr("New license"))
        self._summary.setText(self.tr("Summary"))
        self._description.setText(self.tr("Description"))
        self.summary.setToolTip(self.tr("Short summary of the package. Please, do not use &quot;package name&quot; and do not put a dot signal (.) at the end of a sentence in summary tag"))
        self.description.setToolTip(self.tr("Long description of the package. You should specify more detailed information about the package in this tag."))
        self.backBut_2.setText(self.tr("Back"))
        self.nextBut_2.setText(self.tr("Next"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab_4), "pspec.xml")
        self.label_3.setText(self.tr("Please, select the module you would like to use in actions.py"))
        self.autoTools.setToolTip(self.tr("Select this option if the package is built with autotools"))
        self.autoTools.setText(self.tr("Auto Tools"))
        self.qt4Tools.setToolTip(self.tr("Select this option if the package is built with qt4 tools"))
        self.qt4Tools.setText(self.tr("Qt4 Tools"))
        self.cmakeTools.setToolTip(self.tr("Select this option if the package is built with cmake tools"))
        self.cmakeTools.setText(self.tr("CMake Tools"))
        self.kde4Tools.setToolTip(self.tr("Select this option if the package is built with kde4 tools"))
        self.kde4Tools.setText(self.tr("KDE4 Tools"))
        self.pyTools.setToolTip(self.tr("Select this option if the package is built with python tools"))
        self.pyTools.setText(self.tr("Python Tools"))
        self.sconsTools.setToolTip(self.tr("Select this option if the package is built with scons tools"))
        self.sconsTools.setText(self.tr("SCons Tools"))
        self.mesonTools.setToolTip(self.tr("Select this option if the package is built with meson tools"))
        self.mesonTools.setText(self.tr("Meson Tools"))
        self.backBut_3.setText(self.tr("Back"))
        self.nextBut_3.setText(self.tr("Next"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab_5), "actions.py")
        self.label_6.setText(self.tr("pspec.xml and actions.py files will be created automatically."))
        self.label_5.setText(self.tr("Click extra files you would like to be created:"))
        self.desktopFile.setToolTip(self.tr("With this option selected, you can create desktop file easily. If you select this option, Icon Tag will also be created automatically"))
        self.desktopFile.setText(self.tr("Create a Desktop file"))
        self.serviceScript.setToolTip(self.tr("If your package has a service daemon, select this option to create service script file automatically"))
        self.serviceScript.setText(self.tr("Create a Service Script file"))
        self.iconTag.setToolTip(self.tr("Selecting this option will create Icon tag in pspec.xml file in order to show the package icon next to the name of the package in package-manager"))

        self.iconTag.setText(self.tr("Add an Icon tag"))
        self.comarScript.setToolTip(self.tr("If you need to call some system commands before or after installing the package, use this comar script file template to define these commands"))
        self.comarScript.setText(self.tr("Create a Comar Script file"))
        self.backBut_4.setText(self.tr("Back"))
        self.nextBut_4.setToolTip(self.tr("When all the fields are filled in, you can create the necessary files by pressing this button"))
        self.nextBut_4.setText(self.tr("Create"))
        self.openDirectory.setToolTip(self.tr("Opens the directory which contains pisi source files generated by this program"))
        self.openDirectory.setText(self.tr("Open files directory after creation?"))
        self.pisiyapTab.setTabText(self.pisiyapTab.indexOf(self.tab_6), self.tr("Files"))